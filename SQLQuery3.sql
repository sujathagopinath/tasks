use UserDb

CREATE TABLE EMPLOYEEINFO(
EMP_NAME VARCHAR(15) NOT NULL,
AGE INT,
EMAIL_ID VARCHAR(50) NOT NULL,
)

ALTER TABLE EMPLOYEEINFO
ADD GENDER VARCHAR(10)

ALTER TABLE EMPLOYEEINFO
ALTER COLUMN EMP_NAME VARCHAR(10) NOT NULL

ALTER TABLE EMPLOYEEINFO
DROP COLUMN GENDER

SP_RENAME '[dbo].[EMPLOYEEINFO]','EMPLOYEE'

CREATE TABLE STUDENTINFO(
NAME VARCHAR(15) NOT NULL,
AGE INT,
MARKS INT,
)

INSERT INTO STUDENTINFO VALUES('Aarthi',21,70)
INSERT INTO STUDENTINFO VALUES('Girish',23,80)
INSERT INTO STUDENTINFO VALUES('NIKITA',23,85)
INSERT INTO STUDENTINFO VALUES('RithikaA',15,65)
INSERT INTO STUDENTINFO VALUES('reshma',23,55)

INSERT INTO EMPLOYEEINFO VALUES('Riya',45,'riya@gm.com')
INSERT INTO EMPLOYEEINFO VALUES('priya',55,'priya@gm.com')

SELECT * FROM STUDENTINFO

...WHERE clause

SELECT NAME FROM STUDENTINFO WHERE NAME='Aarthi'

UPDATE STUDENTINFO
SET NAME='MAHA'
WHERE AGE = 21

SELECT * FROM STUDENTINFO

SELECT TOP 2* FROM STUDENTINFO

...Aggerate functions

SELECT MIN(MARKS) AS "MINIMUM MARKS" FROM STUDENTINFO

SELECT MARKS,AGE FROM STUDENTINFO WHERE AGE = (
SELECT MIN (AGE) AS "MINIMUM" FROM STUDENTINFO
)

SELECT MARKS, MIN(AGE) AS "AGE" FROM STUDENTINFO GROUP BY MARKS

SELECT MARKS, MIN(AGE) AS "AGE" FROM STUDENTINFO GROUP BY MARKS
HAVING MIN(MARKS)>65

SELECT NAME, MIN(DISTINCT AGE) AS "AGE" FROM STUDENTINFO GROUP BY NAME

SELECT * FROM STUDENTINFO

SELECT NAME, MIN(AGE*MARKS) AS "VALUES"
FROM STUDENTINFO
GROUP BY NAME

SELECT MAX(MARKS) AS 'MARKS' FROM STUDENTINFO

CREATE TABLE ADDITION(
NAME VARCHAR(25) NOT NULL,
OCCUPATION VARCHAR(30) NOT NULL,
WORKING_HOURS INT ,
SALARY INT
)

SELECT * FROM ADDITION

INSERT INTO ADDITION VALUES ('SUJATHA', 'DEVELOPER', 10, 25000)
INSERT INTO ADDITION VALUES ('SUJA', 'TESTER', 8, 26000)
INSERT INTO ADDITION VALUES ('AKHSHY', 'DATA ANALYST', 11, 27000)
INSERT INTO ADDITION VALUES ('MADHU', 'QA', 7, 28000)
INSERT INTO ADDITION VALUES ('VARUN', 'BFS', 12, 29000)

SELECT SUM(SALARY) AS 'TOTAL SALARY' FROM ADDITION

SELECT OCCUPATION,SUM(SALARY) AS 'TOTAL SALARY'FROM ADDITION GROUP BY OCCUPATION ORDER BY SUM(SALARY)

SELECT DISTINCT OCCUPATION,SUM(SALARY) OVER(PARTITION BY OCCUPATION) AS 'TOTAL SALARY' FROM ADDITION

SELECT AVG(WORKING_HOURS) AS 'AVERAGE WORKING HOURS' FROM ADDITION

SELECT AVG(WORKING_HOURS) AS 'AVERAGE WORKING HOURS' FROM ADDITION GROUP BY OCCUPATION ORDER BY AVG(WORKING_HOURS) DESC

SELECT COUNT(*) AS 'TOTAL OCCUPATION' FROM ADDITION

SELECT NAME,SALARY FROM ADDITION WHERE SALARY>=25000 UNION SELECT NAME,SALARY FROM ADDITION

SELECT NAME,SALARY FROM ADDITION WHERE SALARY>=25000 UNION SELECT NAME,SALARY FROM ADDITION

SELECT * FROM ADDITION WHERE NAME IN('MADHU','SUJA','VARUN')

SELECT * FROM ADDITION WHERE NAME NOT IN('MADHU','SUJA','VARUN')

SELECT * FROM ADDITION WHERE NAME <> 'MADHU'
AND NAME <> 'SUJA'
AND NAME <> 'VARUN'



